<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.root2z.dao.CommentMapper">
    <resultMap id="BaseResultMap" type="com.root2z.model.entity.Comment">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="commentator" jdbcType="VARCHAR" property="commentator"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="is_active" jdbcType="INTEGER" property="isActive"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="article_id" jdbcType="INTEGER" property="articleId"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , commentator, avatar, content, is_active, email, create_time, article_id, parent_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from comment
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.root2z.model.entity.Comment">
        insert into comment (id, commentator, avatar,
                             content, is_active, email, create_time, article_id, parent_id)
        values (#{id,jdbcType=INTEGER}, #{commentator,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
                #{content,jdbcType=VARCHAR}, #{isActive,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP},
                #{articleId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.root2z.model.entity.Comment">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="commentator != null">
                commentator,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="articleId != null">
                article_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="commentator != null">
                #{commentator,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                #{isActive,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{,jdbcType=TIMESTAMP},
            </if>
            <if test="articleId != null">
                #{articleId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.root2z.model.entity.Comment">
        update comment
        <set>
            <if test="commentator != null">
                commentator = #{commentator,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                is_active = #{isActive,jdbcType=INTEGER},
            </if>

            <if test="email != null">
                is_active = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="articleId != null">
                article_id = #{articleId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.root2z.model.entity.Comment">
        update comment
        set commentator = #{commentator,jdbcType=VARCHAR},
            avatar      = #{avatar,jdbcType=VARCHAR},
            content     = #{content,jdbcType=VARCHAR},
            is_active   = #{isActive,jdbcType=INTEGER},
            email       = #{email,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            article_id  = #{articleId,jdbcType=INTEGER},
            parent_id   = #{parentId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="totalCount" resultType="java.lang.Integer">
        select count(*)
        from comment
    </select>
    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment
    </select>
    <select id="findAllById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment where parent_id = #{commentId,jdbcType=INTEGER}
    </select>

    <delete id="deleteAllByIds" parameterType="java.util.List">
        update comment
        set is_active=0
        where id IN
        <foreach collection="Ids" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <select id="selectAllBySorted" resultMap="BaseResultMap">
        select id,
               commentator,
               content,
               create_time,
               article_id
        from comment
        where is_active = 1
        order by id limit #{limit}
    </select>

</mapper>